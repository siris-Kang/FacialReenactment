usage: train_Decoder.py [-h] [--root_dir ROOT_DIR [ROOT_DIR ...]]
                        [--component COMPONENT] [--batchSize BATCHSIZE]
                        [--nThreads NTHREADS] [--serial_batches]
                        [--max_dataset_size MAX_DATASET_SIZE] [--drop_last]
                        [--dataset_mode DATASET_MODE]
                        [--display_freq DISPLAY_FREQ]
                        [--print_freq PRINT_FREQ]
                        [--update_html_freq UPDATE_HTML_FREQ]
                        [--save_epoch_freq SAVE_EPOCH_FREQ]
                        [--checkpoints_dir CHECKPOINTS_DIR]
                        [--gpu_ids GPU_IDS] [--rotate_range ROTATE_RANGE]
                        [--translate_range TRANSLATE_RANGE]
                        [--zoom_range ZOOM_RANGE [ZOOM_RANGE ...]] [--mirror]
                        [--normalise]
                        [--normalisation_type NORMALISATION_TYPE]
                        [--no_dropout] [--input_nc INPUT_NC]
                        [--output_nc OUTPUT_NC] [--ngf NGF] [--ndf NDF]
                        [--which_model_netD WHICH_MODEL_NETD]
                        [--which_model_netG WHICH_MODEL_NETG]
                        [--n_layers_D N_LAYERS_D] [--norm NORM] [--no_lsgan]
                        [--init_type INIT_TYPE]
                        [--pretrain_root PRETRAIN_ROOT] [--no_html]
                        [--display_winsize DISPLAY_WINSIZE]
                        [--display_single_pane_ncols DISPLAY_SINGLE_PANE_NCOLS]
                        [--save_latest_freq SAVE_LATEST_FREQ]
                        [--continue_train] [--load_path LOAD_PATH]
                        [--epoch_count EPOCH_COUNT]
                        [--which_epoch WHICH_EPOCH] [--niter NITER]
                        [--niter_decay NITER_DECAY] [--beta1 BETA1] [--lr LR]
                        [--lambda_A LAMBDA_A] [--lambda_B LAMBDA_B]
                        [--pool_size POOL_SIZE] [--lr_policy LR_POLICY]
                        [--lr_decay_iters LR_DECAY_ITERS]
                        [--identity IDENTITY] [--alpha ALPHA]
                        [--momentum MOMENTUM] [--weight_decay WEIGHT_DECAY]
                        [--lambda_feature_loss LAMBDA_FEATURE_LOSS]
                        [--resize_or_crop RESIZE_OR_CROP] [--no_flip]
                        [--crop_type CROP_TYPE]
                        [--name_landmarks_list NAME_LANDMARKS_LIST]
                        [--num_stacks NUM_STACKS] [--num_blocks NUM_BLOCKS]
                        [--sigma SIGMA] [--fineSize_F1 FINESIZE_F1]
                        [--fineSize_F2 FINESIZE_F2]
                        [--fineSize_Boundary FINESIZE_BOUNDARY]
                        [--nc_F1 NC_F1] [--nc_F2 NC_F2]
                        [--nc_Boundary NC_BOUNDARY] [--feature_loss]
                        [--lambda_pix_loss LAMBDA_PIX_LOSS]
                        [--input_type_D INPUT_TYPE_D]
                        [--feature_loss_type FEATURE_LOSS_TYPE]
                        [--which_boundary_detection WHICH_BOUNDARY_DETECTION]
train_Decoder.py: error: unrecognized arguments: 1
hello world!
